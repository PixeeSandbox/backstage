name: Sync Snyk Monitoring
on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - '.github/workflows/sync_snyk-monitor.yml'
      - '**/*.js'
      - '**/*.ts'
      - '**/*.jsx'
      - '**/*.tsx'
      - '**/*.py'
      - '**/*.java'
      - '**/*.go'

# This workflow runs Snyk Code (SAST) analysis and uploads results to GitHub
# Advanced Security. It focuses on static code analysis rather than dependency
# scanning to reduce SARIF file complexity and stay within GHAS limits.

permissions:
  contents: read

jobs:
  sync:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      # Removed monitor step - focusing only on code analysis

      # Run Snyk Code (SAST) analysis and generate SARIF report
      - name: Create Snyk Code report
        uses: snyk/actions/node@cdb760004ba9ea4d525f2e043745dfe85bb9077e # master
        continue-on-error: true # To make sure that SARIF upload gets called
        with:
          command: code test
          args: >
            --org=backstage-dgh
            --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          NODE_OPTIONS: --max-old-space-size=7168
      - name: Upload Snyk Code report to GHAS
        uses: github/codeql-action/upload-sarif@60168efe1c415ce0f5521ea06d5c2062adbeed1b # v3.28.17
        with:
          sarif_file: snyk.sarif
